//// readme1st.txt ///////////////////////////////////////////
	
	3次元3自由度ロボットアームの軌道追従制御プログラム
	Visual C++ 6.0版 with OpenGL
	動力学（分解加速度制御）バージョン  
	(C) Shugen MA & Takashi Tomiyama  2000/06/08

/////////////////////////////////////////////////////////////


　<< 1. 配布内容 >>
	readme1st.txt	このファイル（使い方、仕様の解説）
	armP.txt	アームパラメータが記述されているファイル
	trd3dLib.h	ivnK3dLib.cppの関数のヘッダファイル
	trd3dLib.cpp	ロボット制御計算の関数を定義するファイル
	MyVeiw.h	MyView.cppのヘッダファイル
	MyView.cpp	ロボットアーム制御のメイン計算、画面表示		
	その他		Visual C++が自動的に生成したファイル


  << 2. とにかく動かしてみよう！ >>

  　trd3dGLというディレクトリの中に、opengl.dws というファイル
  があります。これは、VC++のワークスペース情報を含んだファイル
  です。まずはこれをダブルクリックしてください。そうすると、
  VC++が立ち上がり、プロジェクトが開けます。

  次は、ビルド（コンパイル・リンク）です。上のメニューから、
  ビルド→ビルドを選んでください。F7キーでもビルド可能です。
　下のメッセージウィンドウに「OpenGL.exe - ｴﾗｰ 0、警告 0」
　と出れば成功です。
　
　ビルドに成功したら、今度はプログラムの実行です。
　上のツールバーから「！」←こんなボタンを見つけて押してください。
　「Ctrl + F5」キーでも実行可能です。

　アプリケーションが開始したら、「アニメーション」→「開始」
　を選んでみてください。ロボットアームの先端が、白い点線を追従する
　アニメーションが実行されます。

　次は、「座標系の表示」→「表示する」を選んでみてください。
  D-H法のパラメータ表示によって、座標系がどのように変化したのか
  表示されます。

  今度は、キーボードの矢印キーを適当に押してみてください。
  そうすると、視点を変更することができます。もし、元の視点に
  戻りたい場合は、Homeキーを押せば戻ります。

　これで実行の仕方と主な機能の説明は終わりです。
　次はプログラムを自分で変更する時のポイントについて説明します。

　

　<< 3. 自分でプログラムを変更するポイント >>

　このプログラムでは、
・trd3dLib.cpp にロボットアームの制御に関する全て
・MyVeiw.cpp の CMyView::drawArm() に、アニメーションするモデル
が記述されています。ですから、ロボットアームの制御に関して
このプログラムを変更したい場合は、

①　D-H法のパラメータを用いてモデルを作る。
②　運動学、動力学、制御則、軌道計画を手計算で式を立てる。
③　trd3dLib.cpp の前半部分を自分で立てた式に基づいて書きかえる。
④  MyView.cpp の CMyView::drawArm()のアームモデルを
　　D-Hパラメータにしたがって書き換える。　

という手順をとればよいでしょう。

　処理の流れは、プログラムが開始されたときに、はじめに1度だけ
CMyView::CMyView()が実行され、後はタイマーや、画面の大きさが
変わった時などのイベントの度に、
・静的なもの描写するRenderStockScene()、
・動的なものを描写するRenderScene()
が呼び出され、画面の描写を行います。そして、プログラムが終了する
ときに CMyView::CMyView~()が呼び出され、後始末を行います。

CMyView() の中で、全てのロボットアーム軌道追従に関する計算を行い
関節角度データを配列に保存します。そして、
RenderScene()の中のdrawArm()で、保存した関節角度データを使って
ロボットアームを描いています。

　Visual C++　によるプログラムは普通のC言語と違い、
私たちの目の届くところにはメイン関数を置いていません。
これはMFCが持つさまざまな機能を、内部設計を知らなくても安全に
使えるようにしているためです。
このプログラムも、OpenGL自体や、タイマー処理などを知らなくても
OpenGLでアニメーションができるよう、設計上見せる必要の無い部分は
隠したまま、CMyViewだけを変更すればよいようにしてあります。

　アニメーションやタイマー、視点変更などに関する部分は
みなさんが変更する必要はありません。これらの部分はOpenGLViewに
記述してありますが、OpenGLやMFCプログラムの知識のある人以外は、
むしろ触れないほうが得策でしょう。

(動力学バージョン追加分)

　本プログラムは、invK3dGLの一部を馬先生の書いたDOS時代のプログラムの中身と
入れ替えただけなので、設計が汚く、よみずらい物となってしまいました。
真剣に勉強しようとしている学部生の皆さんには申し訳ありませんが、
設計のやり直しをする気はありませんので、自力で理解し、書き直してください。